// ********RoostGPT********
// Test generated by RoostGPT for test Csharp-beginner using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
using System;
using NUnit.Framework;
using TicTacToe;

namespace TicTacToe.Test
{
    [TestFixture]
    public class AreAllFieldsOccupied_be4cd9d72c
    {
        private GameBoard gameBoard;

        [SetUp]
        public void SetUp()
        {
            gameBoard = new GameBoard();
        }

        [Test]
        public void AreAllFieldsOccupied_AllEmpty_ReturnsFalse()
        {
            // Arrange
            gameBoard.Reset();

            // Act
            bool result = gameBoard.AreAllFieldsOccupied();

            // Assert
            Assert.IsFalse(result, "Expected AreAllFieldsOccupied to return false when all tiles are empty.");
        }

        [Test]
        public void AreAllFieldsOccupied_OneEmpty_ReturnsFalse()
        {
            // Arrange
            gameBoard.Reset();
            gameBoard.OccupyTile(new Player { Id = 1 }, 0, 0);
            gameBoard.OccupyTile(new Player { Id = 1 }, 1, 1);
            gameBoard.OccupyTile(new Player { Id = 1 }, 2, 2);
            // Leave one tile empty

            // Act
            bool result = gameBoard.AreAllFieldsOccupied();

            // Assert
            Assert.IsFalse(result, "Expected AreAllFieldsOccupied to return false when at least one tile is empty.");
        }

        [Test]
        public void AreAllFieldsOccupied_AllOccupied_ReturnsTrue()
        {
            // Arrange
            gameBoard.Reset();
            for (int x = 0; x < 3; x++)
            {
                for (int y = 0; y < 3; y++)
                {
                    gameBoard.OccupyTile(new Player { Id = 1 }, x, y);
                }
            }

            // Act
            bool result = gameBoard.AreAllFieldsOccupied();

            // Assert
            Assert.IsTrue(result, "Expected AreAllFieldsOccupied to return true when all tiles are occupied.");
        }

        [TearDown]
        public void TearDown()
        {
            // Clean up
            gameBoard = null;
        }
    }
}

